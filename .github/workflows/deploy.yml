name: Java CI with Maven

on:
  push:
    branches: 
      - main
      - spinco-dev
      - spinco-staging
      
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: List target directory (debugging)
      run: ls -l target

    - name: Upload JAR as artifact
      uses: actions/upload-artifact@v4
      with:
        name: built-jar
        path: target/*.jar

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: built-jar
        path: target

    - name: Set Environment Variables Based on Branch
      uses: ./.github/set-env-by-branch
      with:
        branch: ${{ github.ref_name }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.ref_name }}
      run: |
        echo "Using ECR repo: $AWS_ECR_REPOSITORY_NAME"
        IMAGE_URI="$ECR_REGISTRY/$AWS_ECR_REPOSITORY_NAME:$IMAGE_TAG"
        echo "Building Docker image: $IMAGE_URI"
        ls -l target
        docker build -t "$IMAGE_URI" .
        docker push "$IMAGE_URI"

#  ecs-deploy:
#    needs: docker
#    runs-on: ubuntu-latest

#    steps:
#    - name: Register updated ECS Task Definition
#      id: task-def
#      env:
#        TASK_FAMILY: ${{ env.SERVICE_NAME }}
#        ECR_URI: ${{ env.ECR_REGISTRY }}/${{ env.AWS_ECR_REPOSITORY_NAME }}
#        IMAGE_TAG: ${{ github.ref_name }}
#      run: |
#        echo "Preparing new ECS task definition..."
#        IMAGE="$ECR_URI:$IMAGE_TAG"
#        echo "New image: $IMAGE"

        # Get the current task definition
 #       NEW_DEF=$(aws ecs describe-task-definition --task-definition $TASK_FAMILY)

        # Update the container image using jq and save it as task-def.json
 #       echo "$NEW_DEF" | jq --arg IMAGE "$IMAGE" '
 #         .taskDefinition.containerDefinitions[0].image = $IMAGE |
 #         {family: .taskDefinition.family, containerDefinitions: .taskDefinition.containerDefinitions}
 #       ' > task-def.json

  #      echo "âœ… task-def.json created"

 #   - name: Deploy to ECS
 #     uses: aws-actions/amazon-ecs-deploy-task-definition@v1
  #    with:
 #       task-definition: task-def.json
 #       service: ${{ env.SERVICE_NAME }}
  #      cluster: ${{ env.CLUSTER_NAME }}
